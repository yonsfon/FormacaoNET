//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NobelApi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NobelEntities : DbContext
    {
        public NobelEntities()
            : base("name=NobelEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Cidade> Cidade { get; set; }
        public virtual DbSet<Filiacao> Filiacao { get; set; }
        public virtual DbSet<Laureado> Laureado { get; set; }
        public virtual DbSet<LaureadoIndividuo> LaureadoIndividuo { get; set; }
        public virtual DbSet<LaureadoOrganizacao> LaureadoOrganizacao { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<PremioNobel> PremioNobel { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<LaureadosPorPaisAtual_Result> LaureadosPorPaisAtual(Nullable<int> paisId)
        {
            var paisIdParameter = paisId.HasValue ?
                new ObjectParameter("paisId", paisId) :
                new ObjectParameter("paisId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LaureadosPorPaisAtual_Result>("LaureadosPorPaisAtual", paisIdParameter);
        }
    }
}
